# src/tg_bot/handlers/command_handlers.py

import logging
from aiogram import types
from pathlib import Path
from aiogram.fsm.context import FSMContext
import asyncio
from src.tg_bot.handlers.spec_handlers.auth_handler import start_auth_polling

from src.tg_bot.utils import UserState, UNAUTHORIZED_STATE_MESSAGES, AUTH_WAITING_MESSAGES, auth_keyboard, auth_waiting_keyboard
from src.hh.auth import HHAuthService

from src.utils import get_logger
logger = get_logger()

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
hh_auth_service = HHAuthService()
# –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
auth_url = hh_auth_service.get_auth_url()


async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    user_id = message.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É /start")
    
    await message.answer(UNAUTHORIZED_STATE_MESSAGES["greeting"], reply_markup=auth_keyboard)
    await state.set_state(UserState.UNAUTHORIZED)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ UNAUTHORIZED")


async def cmd_auth(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏."""
    user_id = message.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ —Å—Å—ã–ª–∫–æ–π
    auth_message = f"{AUTH_WAITING_MESSAGES['auth_instructions']}\nüîó –°—Å—ã–ª–∫–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {auth_url}"
    
    await message.answer(auth_message, reply_markup=auth_waiting_keyboard )
    await state.set_state(UserState.AUTH_WAITING)
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–µ—Ä–µ–≤–µ–¥–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ AUTH_WAITING")
    
    asyncio.create_task(start_auth_polling(user_id, state))
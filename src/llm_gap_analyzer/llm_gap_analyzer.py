# src/llm_gap_analyzer/llm_gap_analyzer.py
import os
from typing import Optional, Dict, Any
from openai import OpenAI
from pydantic import ValidationError
import instructor

# –î–û–ë–ê–í–ò–¢–¨ –∏–º–ø–æ—Ä—Ç—ã LangSmith
from langsmith.wrappers import wrap_openai
from langsmith import traceable, Client

from src.utils import get_logger
from src.llm_gap_analyzer import settings
from src.models.gap_analysis_models import EnhancedResumeTailoringAnalysis
from src.llm_gap_analyzer.formatter import format_resume_data, format_vacancy_data
from src.security.openai_control import openai_controller

logger = get_logger()

# LangSmith –∫–ª–∏–µ–Ω—Ç (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
def create_langsmith_client():
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∏–µ–Ω—Ç–∞ LangSmith –¥–ª—è —Ç—Ä–µ–π—Å–∏–Ω–≥–∞."""
    api_key = os.getenv("LANGCHAIN_API_KEY")
    if not api_key:
        logger.warning("LANGCHAIN_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —Ç—Ä–µ–π—Å–∏–Ω–≥ –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω")
        return None
    return Client(api_key=api_key)

ls_client = create_langsmith_client()


class LLMGapAnalyzer:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—é–º–µ —Å –ø–æ–º–æ—â—å—é OpenAI API"""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenAI —Å LangSmith —Ç—Ä–µ–π—Å–∏–Ω–≥–æ–º."""
        self.config = settings
        self.model = self.config.model_name
        self.client = self._create_traced_client()
        logger.info(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω GAP –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Å –º–æ–¥–µ–ª—å—é {self.model}")
    
    def _create_traced_client(self) -> OpenAI:
        """–°–æ–∑–¥–∞–µ—Ç OpenAI –∫–ª–∏–µ–Ω—Ç —Å LangSmith —Ç—Ä–µ–π—Å–∏–Ω–≥–æ–º."""
        base_client = OpenAI(api_key=self.config.api_key)
        
        if ls_client:
            logger.info("LangSmith —Ç—Ä–µ–π—Å–∏–Ω–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è GAP –∞–Ω–∞–ª–∏–∑–∞")
            wrapped_client = wrap_openai(base_client)
            return wrapped_client
        else:
            logger.info("LangSmith —Ç—Ä–µ–π—Å–∏–Ω–≥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç")
            return base_client
    
    def _create_system_prompt(self) -> str:
        """–û–ë–ù–û–í–õ–ï–ù–ù–´–ô —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–µ–π."""
        return """# –†–û–õ–¨: –¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç HR —Å 10+ –ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º GAP-–∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—é–º–µ –≤ IT-—Å—Ñ–µ—Ä–µ

## –ö–û–ù–¢–ï–ö–°–¢ –ó–ê–î–ê–ß–ò
–¢—ã –ø—Ä–æ–≤–æ–¥–∏—à—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π GAP-–∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –∏–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –æ—Ü–µ–Ω–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–ø—ã—Ç–Ω—ã–µ —Ä–µ–∫—Ä—É—Ç–µ—Ä—ã.

## –ú–ï–¢–û–î–û–õ–û–ì–ò–Ø –ê–ù–ê–õ–ò–ó–ê (—Å–ª–µ–¥—É–π —Å—Ç—Ä–æ–≥–æ –ø–æ —ç—Ç–∞–ø–∞–º)

### –≠–¢–ê–ü 1: –ü–ï–†–í–ò–ß–ù–´–ô –°–ö–†–ò–ù–ò–ù–ì (7-15 —Å–µ–∫—É–Ω–¥) ‚Üí PrimaryScreeningResult
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –±–∞–∑–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ HR –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤ –ø–µ—Ä–≤—ã–µ —Å–µ–∫—É–Ω–¥—ã:
- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏ ‚Üí job_title_match
- –û–±—â–∏–π —Å—Ç–∞–∂ –≤ –Ω—É–∂–Ω–æ–π —Å—Ñ–µ—Ä–µ vs —Ç—Ä–µ–±—É–µ–º—ã–π ‚Üí experience_years_match  
- –ù–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ (–≤–∏–¥–Ω—ã –ª–∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞) ‚Üí key_skills_visible
- –õ–æ–∫–∞—Ü–∏—è –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–±–æ—Ç–µ ‚Üí location_suitable
- –ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è vs –±—é–¥–∂–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ ‚Üí salary_expectations_match

### –≠–¢–ê–ü 2: –ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø –¢–†–ï–ë–û–í–ê–ù–ò–ô ‚Üí RequirementAnalysis.requirement_type
‚ö†Ô∏è –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–ß–ù–£–Æ —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é –¥–ª—è requirement_type:
- **MUST_HAVE** - –±–µ–∑ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞
- **NICE_TO_HAVE** - –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏—Ç—å  
- **ADDITIONAL_BONUS** - –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–ª—é—Å—ã)

### –≠–¢–ê–ü 3: –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø ‚Üí RequirementAnalysis.compliance_status
–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–∏ –¢–û–ß–ù–´–ô —Å—Ç–∞—Ç—É—Å:
- **FULL_MATCH** (‚úÖ –ü–û–õ–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï) - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
- **PARTIAL_MATCH** (‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï) - –µ—Å—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–ª—É–±–æ–∫–æ
- **MISSING** (‚ùå –û–¢–°–£–¢–°–¢–í–£–ï–¢) - —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –Ω–µ –æ—Ç—Ä–∞–∂–µ–Ω–æ –≤ —Ä–µ–∑—é–º–µ
- **UNCLEAR** (üîç –¢–†–ï–ë–£–ï–¢ –£–¢–û–ß–ù–ï–ù–ò–Ø) - –Ω–µ—è—Å–Ω–æ –∏–∑ —Ä–µ–∑—é–º–µ

### –≠–¢–ê–ü 4: –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ü–†–ï–ó–ï–ù–¢–ê–¶–ò–ò ‚Üí ResumeQualityAssessment
–û—Ü–µ–Ω–∏ –ö–ê–ö –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å ‚Üí structure_clarity (1-10)
- –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ ‚Üí content_relevance (1-10)
- –ù–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π vs –æ–±—â–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ ‚Üí achievement_focus (1-10)
- –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é ‚Üí adaptation_quality (1-10)

## –ö–†–ò–¢–ï–†–ò–ò –ö–ê–ß–ï–°–¢–í–ï–ù–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê

### Hard Skills ‚Üí skill_category: "HARD_SKILLS":
- –ü—Ä–æ–≤–µ—Ä—å –¢–û–ß–ù–û–ï —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π (Django vs "–≤–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏")
- –û—Ü–µ–Ω–∏ –≥–ª—É–±–∏–Ω—É –æ–ø—ã—Ç–∞ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤
- –°–æ–ø–æ—Å—Ç–∞–≤—å —É—Ä–æ–≤–µ–Ω—å –∑–∞–¥–∞—á –≤ —Ä–µ–∑—é–º–µ —Å —É—Ä–æ–≤–Ω–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏

### Soft Skills ‚Üí skill_category: "SOFT_SKILLS":
- –ò—â–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Ñ–∞–∫—Ç—ã, –∞ –Ω–µ –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏
- –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–∞—á–µ—Å—Ç–≤–æ —Å–∞–º–æ–≥–æ —Ä–µ–∑—é–º–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞–≤—ã–∫–æ–≤
- –û—Ü–µ–Ω–∏–≤–∞–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–∞–Ω–µ—Ä—ã –∏–∑–ª–æ–∂–µ–Ω–∏—è –∫—É–ª—å—Ç—É—Ä–µ –∫–æ–º–ø–∞–Ω–∏–∏

### –û–ø—ã—Ç ‚Üí skill_category: "EXPERIENCE":
- –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —Å—Ñ–µ—Ä—ã –∏ –∑–∞–¥–∞—á
- –ö–∞—Ä—å–µ—Ä–Ω–∞—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è (—Ä–æ—Å—Ç, —Å—Ç–∞–≥–Ω–∞—Ü–∏—è, —Å–∫–∞—á–∫–∏)
- –ú–∞—Å—à—Ç–∞–± –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏

### –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ ‚Üí skill_category: "EDUCATION":
- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏
- –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
- –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤

## –§–û–†–ú–ê–¢ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô ‚Üí DetailedRecommendation
‚ö†Ô∏è –í–ê–ñ–ù–û: –¢–æ—á–Ω–∞—è —Å–≤—è–∑—å criticality —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π:
- **CRITICAL** ‚Üí –ø–æ–ø–∞–¥–µ—Ç –≤ critical_recommendations
- **IMPORTANT** ‚Üí –ø–æ–ø–∞–¥–µ—Ç –≤ important_recommendations  
- **DESIRED** ‚Üí –ø–æ–ø–∞–¥–µ—Ç –≤ optional_recommendations

–î–ª—è –∫–∞–∂–¥–æ–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É–∫–∞–∑—ã–≤–∞–π:
1. **–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å**: CRITICAL / IMPORTANT / DESIRED
2. **–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ**: –ø–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –¥–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏ ‚Üí business_rationale
3. **–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è**: —á—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å/—É–±—Ä–∞—Ç—å ‚Üí specific_actions
4. **–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫**: –∫–∞–∫ –ª—É—á—à–µ –Ω–∞–ø–∏—Å–∞—Ç—å ‚Üí example_wording

## –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø
- –ò—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é HR
- –£—á–∏—Ç—ã–≤–∞–π —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ IT-—Ä—ã–Ω–∫–∞
- –î–∞–≤–∞–π actionable —Å–æ–≤–µ—Ç—ã, –∞ –Ω–µ –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
- –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∏—Ä—É–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–ª–∏—è–Ω–∏—é –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏

–ü—Ä–æ–≤–µ–¥–∏ –∞–Ω–∞–ª–∏–∑ –∏ –≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å–æ–≥–ª–∞—Å–Ω–æ –º–æ–¥–µ–ª–∏ EnhancedResumeTailoringAnalysis."""
    
    def _create_user_prompt(self, parsed_resume: Dict[str, Any], parsed_vacancy: Dict[str, Any]) -> str:
        """–û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ø—Ä–æ–º–ø—Ç —Å —É—Ç–æ—á–Ω–µ–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏."""
        formatted_resume = format_resume_data(parsed_resume)
        formatted_vacancy = format_vacancy_data(parsed_vacancy)
        
        return f"""<resume_data>
{formatted_resume}
</resume_data>

<vacancy_data>
{formatted_vacancy}
</vacancy_data>

## –ò–ù–°–¢–†–£–ö–¶–ò–Ø –î–õ–Ø GAP-–ê–ù–ê–õ–ò–ó–ê

–ü—Ä–æ–≤–µ–¥–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π GAP-–∞–Ω–∞–ª–∏–∑ –ø–æ —Å–ª–µ–¥—É—é—â–∏–º —ç—Ç–∞–ø–∞–º:

1. **–ü–ï–†–í–ò–ß–ù–´–ô –°–ö–†–ò–ù–ò–ù–ì** (7-15 —Å–µ–∫—É–Ω–¥) ‚Üí –∑–∞–ø–æ–ª–Ω–∏ PrimaryScreeningResult
2. **–ö–õ–ê–°–°–ò–§–ò–ö–ê–¶–ò–Ø –¢–†–ï–ë–û–í–ê–ù–ò–ô** ‚Üí –¥–ª—è –∫–∞–∂–¥–æ–≥–æ requirement_type –∏—Å–ø–æ–ª—å–∑—É–π: MUST_HAVE / NICE_TO_HAVE / ADDITIONAL_BONUS
3. **–î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø** ‚Üí –¥–ª—è –∫–∞–∂–¥–æ–≥–æ compliance_status –∏—Å–ø–æ–ª—å–∑—É–π: FULL_MATCH / PARTIAL_MATCH / MISSING / UNCLEAR
4. **–û–¶–ï–ù–ö–ê –ö–ê–ß–ï–°–¢–í–ê –ü–†–ï–ó–ï–ù–¢–ê–¶–ò–ò** ‚Üí –∑–∞–ø–æ–ª–Ω–∏ ResumeQualityAssessment (–≤—Å–µ –ø–æ–ª—è 1-10)
5. **–ü–†–ò–û–†–ò–¢–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò** ‚Üí —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏ –ø–æ criticality: CRITICAL/IMPORTANT/DESIRED
6. **–ò–¢–û–ì–û–í–´–ï –í–´–í–û–î–´** ‚Üí –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –Ω–∞–π–º—É

‚ö†Ô∏è –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–ß–ù–£–Æ —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é –∏–∑ enum'–æ–≤ –º–æ–¥–µ–ª–∏! 

–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å–æ–≥–ª–∞—Å–Ω–æ –º–æ–¥–µ–ª–∏ EnhancedResumeTailoringAnalysis."""
    
    @traceable(client=ls_client, project_name="llamaindex_test", run_type="retriever")
    async def gap_analysis(self, parsed_resume: Dict[str, Any], parsed_vacancy: Dict[str, Any]) -> Optional[EnhancedResumeTailoringAnalysis]:
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π GAP-–∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–∏ —Å —Ç—Ä–µ–π—Å–∏–Ω–≥–æ–º."""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è OpenAI API
        openai_controller.check_api_permission()
        
        try:
            logger.info("–ù–∞—á–∞—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π GAP –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é")
            
            # 1. –°–æ–∑–¥–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã
            system_prompt = self._create_system_prompt()
            user_prompt = self._create_user_prompt(parsed_resume, parsed_vacancy)
            
            # 2. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è chat-completion
            messages = [
                {
                    "role": "system",
                    "content": system_prompt
                },
                {
                    "role": "user", 
                    "content": user_prompt
                }
            ]
            
            logger.debug(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI API —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é {self.model}")
            
            # 3. –í—ã–∑–≤–∞—Ç—å OpenAI API (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
            completion = self.client.beta.chat.completions.parse(
                temperature=0.2,
                model=self.model,
                messages=messages,
                response_format=EnhancedResumeTailoringAnalysis,
            )

            # –ó–∞–ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API
            tokens_used = completion.usage.total_tokens if completion.usage else 0
            openai_controller.record_request(success=True, tokens=tokens_used)

            # 4. –ò–∑–≤–ª–µ—á—å –æ—Ç–≤–µ—Ç
            raw_response_text = completion.choices[0].message.content
            if not raw_response_text:
                logger.error("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º GAP-–∞–Ω–∞–ª–∏–∑–µ")
                openai_controller.record_request(success=False, error="–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏")
                return None
            
            # 5. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –≤ –û–ë–ù–û–í–õ–ï–ù–ù–£–Æ –º–æ–¥–µ–ª—å
            gap_result = EnhancedResumeTailoringAnalysis.model_validate_json(raw_response_text)
            logger.info("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π GAP-–∞–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é")
            
            # –î–û–ë–ê–í–ò–¢–¨: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–æ–≤—ã—Ö –ø–æ–ª—è—Ö
            if ls_client:
                # –ü–æ–¥—Å—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –Ω–æ–≤—ã–º enum'–∞–º –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
                requirement_types = [req.requirement_type for req in gap_result.requirements_analysis]
                skill_categories = [req.skill_category for req in gap_result.requirements_analysis if req.skill_category]
                
                logger.info("–¢—Ä–µ–π—Å–∏–Ω–≥: –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω")
                logger.info(f"- –ü—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è: {gap_result.overall_match_percentage}%")
                logger.info(f"- –¢–∏–ø—ã —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π: {set(requirement_types)}")
                logger.info(f"- –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–≤—ã–∫–æ–≤: {set(skill_categories)}")
                logger.info(f"- –ö—Ä–∏—Ç–∏—á–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(gap_result.critical_recommendations)}")
                logger.info(f"- –í–∞–∂–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(gap_result.important_recommendations)}")
                logger.info(f"- –ñ–µ–ª–∞—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(gap_result.optional_recommendations)}")
            
            return gap_result

        except ValidationError as ve:
            logger.error(f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π GAP-–º–æ–¥–µ–ª–∏: {ve}")
            openai_controller.record_request(success=False, error=f"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {ve}")
            
            # –£–õ–£–ß–®–ï–ù–ù–û–ï –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
            if ls_client:
                # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –Ω–æ–≤—ã—Ö enum'–æ–≤
                logger.error(f"–¢—Ä–µ–π—Å–∏–Ω–≥: –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏ - {ve}")
                logger.error("–í–æ–∑–º–æ–∂–Ω–æ –º–æ–¥–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞—Ä—É—é —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏—é, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ enum –∑–Ω–∞—á–µ–Ω–∏—è")
            return None
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–º GAP-–∞–Ω–∞–ª–∏–∑–µ: {e}", exc_info=True)
            openai_controller.record_request(success=False, error=str(e))
            
            if ls_client:
                logger.error(f"–¢—Ä–µ–π—Å–∏–Ω–≥: –æ–±—â–∞—è –æ—à–∏–±–∫–∞ - {e}")
            return None
#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–µ–±–∞–≥–≥–µ—Ä —Ö–µ–Ω–¥–ª–µ—Ä–∞ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –¥–ª—è Telegram.
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–æ—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞ –∏–∑ JSON —Ñ–∞–π–ª–∞.
–î–≤–∞ —Ä–µ–∂–∏–º–∞: —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python tests/debug_cover_letter/debug_cover_letter_handler.py
"""

import json
import sys
from pathlib import Path
from typing import Dict, Any, Optional

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from src.models.cover_letter_models import EnhancedCoverLetter
from src.utils.logging_config import setup_logging

def load_cover_letter_result(file_path: str) -> Optional[EnhancedCoverLetter]:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –∏–∑ JSON —Ñ–∞–π–ª–∞."""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        # –°–æ–∑–¥–∞–µ–º Pydantic –æ–±—ä–µ–∫—Ç –∏–∑ JSON
        cover_letter = EnhancedCoverLetter.model_validate(data)
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ {file_path}")
        return cover_letter
        
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞: {e}")
        return None

# –£–±–∏—Ä–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ª–∏–º–∏—Ç–æ–≤ - –≤ —Ö–µ–Ω–¥–ª–µ—Ä–µ –∏—Ö –Ω–µ—Ç

def show_all_formatted_messages(cover_letter: EnhancedCoverLetter):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –æ–Ω–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ —Ö–µ–Ω–¥–ª–µ—Ä–∞
        from src.tg_bot.handlers.spec_handlers.cover_letter_handler import (
            format_enhanced_cover_letter_preview,
            format_skills_match_section,
            format_cover_letter_text,
            format_improvement_tips
        )
        
        limit_status = "–ü–û–õ–ù–û–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–ï"
        print(f"\n{'='*80}")
        print(f"üì± –°–û–û–ë–©–ï–ù–ò–Ø –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ({limit_status})")
        print(f"{'='*80}")
        
        # –ß–∞—Å—Ç—å 1: –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å –æ—Ü–µ–Ω–∫–∞–º–∏
        print("\nüîπ –°–û–û–ë–©–ï–ù–ò–ï #1: –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ô –ü–†–û–°–ú–û–¢–†")
        print("-" * 60)
        try:
            preview = format_enhanced_cover_letter_preview(cover_letter)
            print(preview)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: {e}")
        
        # –ß–∞—Å—Ç—å 2: –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–∞–≤—ã–∫–æ–≤
        print("\nüîπ –°–û–û–ë–©–ï–ù–ò–ï #2: –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ù–ê–í–´–ö–û–í")
        print("-" * 60)
        try:
            skills_match = format_skills_match_section(cover_letter)
            print(skills_match)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞–≤—ã–∫–æ–≤: {e}")
        
        # –ß–∞—Å—Ç—å 3: –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
        print("\nüîπ –°–û–û–ë–©–ï–ù–ò–ï #3: –ü–û–õ–ù–´–ô –¢–ï–ö–°–¢ –ü–ò–°–¨–ú–ê")
        print("-" * 60)
        try:
            letter_text = format_cover_letter_text(cover_letter)
            print(letter_text)
            print(f"\nüìä –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –ø–∏—Å—å–º–∞: {len(letter_text)} —Å–∏–º–≤–æ–ª–æ–≤")
            if len(letter_text) > 4000:
                print("‚ö†Ô∏è –¢–µ–∫—Å—Ç –ø—Ä–µ–≤—ã—à–∞–µ—Ç 4000 —Å–∏–º–≤–æ–ª–æ–≤ - –±—É–¥–µ—Ç —Ä–∞–∑–±–∏—Ç –Ω–∞ —á–∞—Å—Ç–∏")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –ø–∏—Å—å–º–∞: {e}")
        
        # –ß–∞—Å—Ç—å 4: –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
        print("\nüîπ –°–û–û–ë–©–ï–ù–ò–ï #4: –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ")
        print("-" * 60)
        try:
            improvements = format_improvement_tips(cover_letter)
            if improvements:
                print(improvements)
            else:
                print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç - –ø–∏—Å—å–º–æ –≥–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {e}")
            
    except ImportError as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∞: {e}")
        print("üí° –í–æ–∑–º–æ–∂–Ω–æ —Ö–µ–Ω–¥–ª–µ—Ä –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –¥—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        show_basic_formatting(cover_letter)

def show_basic_formatting(cover_letter: EnhancedCoverLetter):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ—Å–ª–∏ —Ö–µ–Ω–¥–ª–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."""
    print("\nüìß –ë–ê–ó–û–í–û–ï –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –ü–ò–°–¨–ú–ê")
    print("="*80)
    
    print("üî∏ –ú–ï–¢–ê-–ò–ù–§–û–†–ú–ê–¶–ò–Ø:")
    print(f"–¢–∏–ø —Ä–æ–ª–∏: {cover_letter.role_type}")
    print(f"–ö–æ–º–ø–∞–Ω–∏—è: {cover_letter.company_context.company_name}")
    print(f"–†–∞–∑–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏: {cover_letter.company_context.company_size}")
    print(f"–î–ª–∏–Ω–∞ –ø–∏—Å—å–º–∞: {cover_letter.estimated_length}")
    
    print("\nüî∏ –û–¶–ï–ù–ö–ò –ö–ê–ß–ï–°–¢–í–ê:")
    print(f"–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: {cover_letter.personalization_score}/10")
    print(f"–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {cover_letter.professional_tone_score}/10")
    print(f"–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {cover_letter.relevance_score}/10")
    
    print("\nüî∏ –ê–ù–ê–õ–ò–ó –ù–ê–í–´–ö–û–í:")
    print(f"–°–æ–≤–ø–∞–¥–∞—é—â–∏–µ –Ω–∞–≤—ã–∫–∏: {', '.join(cover_letter.skills_match.matched_skills)}")
    
    print("\nüî∏ –ü–û–õ–ù–û–ï –ü–ò–°–¨–ú–û:")
    print(f"–¢–µ–º–∞: {cover_letter.subject_line}")
    print(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {cover_letter.personalized_greeting}")
    print(f"–ó–∞—Ü–µ–ø–∫–∞: {cover_letter.opening_hook}")
    print(f"–ò–Ω—Ç–µ—Ä–µ—Å –∫ –∫–æ–º–ø–∞–Ω–∏–∏: {cover_letter.company_interest}")
    print(f"–û–ø—ã—Ç: {cover_letter.relevant_experience}")
    print(f"–¶–µ–Ω–Ω–æ—Å—Ç—å: {cover_letter.value_demonstration}")
    if cover_letter.growth_mindset:
        print(f"–†–∞–∑–≤–∏—Ç–∏–µ: {cover_letter.growth_mindset}")
    print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {cover_letter.professional_closing}")
    print(f"–ü–æ–¥–ø–∏—Å—å: {cover_letter.signature}")

def show_statistics(cover_letter: EnhancedCoverLetter):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞."""
    print(f"\n{'='*80}")
    print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê –ì–ï–ù–ï–†–ê–¶–ò–ò –ü–ò–°–¨–ú–ê")
    print(f"{'='*80}")
    
    print("üìã –û–°–ù–û–í–ù–´–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò:")
    print(f"  ‚Ä¢ –¢–∏–ø —Ä–æ–ª–∏: {cover_letter.role_type}")
    print(f"  ‚Ä¢ –†–∞–∑–º–µ—Ä –∫–æ–º–ø–∞–Ω–∏–∏: {cover_letter.company_context.company_size}")
    print(f"  ‚Ä¢ –û—Ü–µ–Ω–∫–∞ –¥–ª–∏–Ω—ã: {cover_letter.estimated_length}")
    
    print("\nüéØ –û–¶–ï–ù–ö–ò –ö–ê–ß–ï–°–¢–í–ê:")
    print(f"  ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: {cover_letter.personalization_score}/10")
    print(f"  ‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {cover_letter.professional_tone_score}/10")
    print(f"  ‚Ä¢ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: {cover_letter.relevance_score}/10")
    avg_score = (cover_letter.personalization_score + cover_letter.professional_tone_score + cover_letter.relevance_score) / 3
    print(f"  ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {avg_score:.1f}/10")
    
    print("\nüìè –î–õ–ò–ù–ê –°–ï–ö–¶–ò–ô –ü–ò–°–¨–ú–ê:")
    print(f"  ‚Ä¢ –¢–µ–º–∞ –ø–∏—Å—å–º–∞: {len(cover_letter.subject_line)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ: {len(cover_letter.personalized_greeting)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –ó–∞—Ü–µ–ø–∫–∞: {len(cover_letter.opening_hook)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å –∫ –∫–æ–º–ø–∞–Ω–∏–∏: {len(cover_letter.company_interest)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç: {len(cover_letter.relevant_experience)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ü–µ–Ω–Ω–æ—Å—Ç–∏: {len(cover_letter.value_demonstration)} —Å–∏–º–≤–æ–ª–æ–≤")
    if cover_letter.growth_mindset:
        print(f"  ‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–∑–≤–∏—Ç–∏—é: {len(cover_letter.growth_mindset)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ: {len(cover_letter.professional_closing)} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  ‚Ä¢ –ü–æ–¥–ø–∏—Å—å: {len(cover_letter.signature)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    # –û–±—â–∞—è –¥–ª–∏–Ω–∞ –ø–∏—Å—å–º–∞
    total_length = (
        len(cover_letter.opening_hook) + 
        len(cover_letter.company_interest) + 
        len(cover_letter.relevant_experience) + 
        len(cover_letter.value_demonstration) + 
        len(cover_letter.professional_closing) +
        (len(cover_letter.growth_mindset) if cover_letter.growth_mindset else 0)
    )
    print(f"  ‚Ä¢ –û–±—â–∞—è –¥–ª–∏–Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞: {total_length} —Å–∏–º–≤–æ–ª–æ–≤")
    
    print("\nüîß –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø:")
    print(f"  ‚Ä¢ –°–æ–≤–ø–∞–¥–∞—é—â–∏—Ö –Ω–∞–≤—ã–∫–æ–≤: {len(cover_letter.skills_match.matched_skills)}")
    if cover_letter.skills_match.matched_skills:
        print(f"    - –ù–∞–≤—ã–∫–∏: {', '.join(cover_letter.skills_match.matched_skills)}")
    
    print(f"  ‚Ä¢ –î–ª–∏–Ω–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –æ–ø—ã—Ç–∞: {len(cover_letter.skills_match.relevant_experience)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    if cover_letter.skills_match.quantified_achievement:
        print(f"  ‚Ä¢ –î–ª–∏–Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è: {len(cover_letter.skills_match.quantified_achievement)} —Å–∏–º–≤–æ–ª–æ–≤")
    
    print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ:")
    print(f"  ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: {len(cover_letter.improvement_suggestions)}")
    for i, suggestion in enumerate(cover_letter.improvement_suggestions, 1):
        print(f"    {i}. {suggestion[:100]}{'...' if len(suggestion) > 100 else ''}")
    
    print("\nüè¢ –ö–û–ù–¢–ï–ö–°–¢ –ö–û–ú–ü–ê–ù–ò–ò:")
    if cover_letter.company_context.company_culture:
        print(f"  ‚Ä¢ –ö—É–ª—å—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏: {cover_letter.company_context.company_culture[:100]}{'...' if len(cover_letter.company_context.company_culture) > 100 else ''}")
    if cover_letter.company_context.product_info:
        print(f"  ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–µ: {cover_letter.company_context.product_info[:100]}{'...' if len(cover_letter.company_context.product_info) > 100 else ''}")

# –£–±–∏—Ä–∞–µ–º –ø–æ–∫–∞–∑ –ª–∏–º–∏—Ç–æ–≤ - –≤ —Ö–µ–Ω–¥–ª–µ—Ä–µ –∏—Ö –Ω–µ—Ç

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–µ–±–∞–≥–≥–µ—Ä–∞ —Ö–µ–Ω–¥–ª–µ—Ä–∞ —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞."""
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    setup_logging(log_level="INFO")
    
    print("üìß –î–ï–ë–ê–ì–ì–ï–† –•–ï–ù–î–õ–ï–†–ê –°–û–ü–†–û–í–û–î–ò–¢–ï–õ–¨–ù–û–ì–û –ü–ò–°–¨–ú–ê")
    print("=" * 80)
    
    # ===============================================
    # –ù–ê–°–¢–†–û–ô–ö–ò –û–¢–õ–ê–î–ö–ò
    # ===============================================
    
    # –ü–£–¢–¨ –ö JSON –§–ê–ô–õ–£ –° –†–ï–ó–£–õ–¨–¢–ê–¢–û–ú –ì–ï–ù–ï–†–ê–¶–ò–ò –ü–ò–°–¨–ú–ê
    cover_letter_result_json_path = "/Users/mask/Documents/–ü—Ä–æ–µ—Ç—ã_2025/gpt_4_mini_hackaton_final/tests/debug_response_cover_letter.json"    # üëà –£–ö–ê–ñ–ò–¢–ï –ü–£–¢–¨ –ö JSON –†–ï–ó–£–õ–¨–¢–ê–¢–£
    
    # –§–õ–ê–ì–ò –£–ü–†–ê–í–õ–ï–ù–ò–Ø (True/False)
    show_messages = True           # üëà –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    show_stats = True              # üëà –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    
    # ===============================================
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∏—Å—å–º–∞
        cover_letter = load_cover_letter_result(cover_letter_result_json_path)
        if not cover_letter:
            return
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if show_stats:
            show_statistics(cover_letter)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if show_messages:
            show_all_formatted_messages(cover_letter)
        
        print(f"\n{'='*80}")
        print("‚úÖ –î–ï–ë–ê–ì–ì–ï–† –•–ï–ù–î–õ–ï–†–ê –ó–ê–í–ï–†–®–ï–ù!")
        print("="*80)
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –≤—Å–µ —Å–µ–∫—Ü–∏–∏ –ø–∏—Å—å–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ HTML —Ç–µ–≥–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ Telegram")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–∏—Å—å–º–æ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π Telegram")
        print("4. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –ø–æ–ª–µ–∑–Ω—ã")
        print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–∏—Å—å–º–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç—Å—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è")
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()